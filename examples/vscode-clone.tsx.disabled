import React, { useState } from 'react'
import { Grid, Block, Divider } from '../src'
import type { BlockConfig } from '../src'

/**
 * VS Code-style layout example demonstrating:
 * - Activity bar (fixed)
 * - Sidebar (collapsible)
 * - Editor area (resizable)
 * - Panel (collapsible, bottom)
 * - Status bar (fixed)
 */

const vscodeLayout: BlockConfig[] = [
  // Root container
  {
    id: 'root',
    type: 'group',
    direction: 'column',
    order: 0
  },

  // Main area (activity bar + content)
  {
    id: 'main-area',
    type: 'group',
    direction: 'row',
    defaultSize: 1,
    sizeUnit: 'fr',
    parentId: 'root',
    order: 0
  },

  // Activity Bar (leftmost)
  {
    id: 'activity-bar',
    type: 'block',
    defaultSize: 48,
    sizeUnit: 'px',
    dividerPosition: 'end',
    parentId: 'main-area',
    order: 0
  },

  // Sidebar
  {
    id: 'sidebar',
    type: 'block',
    defaultSize: 300,
    minSize: 200,
    maxSize: 600,
    sizeUnit: 'px',
    dividerPosition: 'end',
    collapsible: true,
    collapseAt: 100,
    collapseTo: 0,
    parentId: 'main-area',
    order: 1
  },

  // Editor + Panel area
  {
    id: 'editor-panel-area',
    type: 'group',
    direction: 'column',
    defaultSize: 1,
    sizeUnit: 'fr',
    parentId: 'main-area',
    order: 2
  },

  // Editor area
  {
    id: 'editor',
    type: 'block',
    defaultSize: 2,
    sizeUnit: 'fr',
    dividerPosition: 'end',
    parentId: 'editor-panel-area',
    order: 0
  },

  // Panel (bottom)
  {
    id: 'panel',
    type: 'block',
    defaultSize: 200,
    minSize: 100,
    maxSize: 400,
    sizeUnit: 'px',
    collapsible: true,
    collapseAt: 150,
    collapseTo: 0,
    parentId: 'editor-panel-area',
    order: 1
  },

  // Status Bar
  {
    id: 'status-bar',
    type: 'block',
    defaultSize: 24,
    sizeUnit: 'px',
    parentId: 'root',
    order: 1
  }
]

const VSCodeCloneExample: React.FC = () => {
  const [activeView, setActiveView] = useState('explorer')
  const [activePanelTab, setActivePanelTab] = useState('terminal')

  const activityItems = [
    { id: 'explorer', icon: 'üìÅ', label: 'Explorer' },
    { id: 'search', icon: 'üîç', label: 'Search' },
    { id: 'source-control', icon: 'üåø', label: 'Source Control' },
    { id: 'debug', icon: 'üêõ', label: 'Debug' },
    { id: 'extensions', icon: 'üì¶', label: 'Extensions' }
  ]

  const panelTabs = [
    { id: 'terminal', label: 'Terminal' },
    { id: 'problems', label: 'Problems' },
    { id: 'output', label: 'Output' },
    { id: 'debug-console', label: 'Debug Console' }
  ]

  return (
    <div style={{ height: '100vh', fontFamily: '"Segoe UI", Tahoma, Geneva, Verdana, sans-serif', fontSize: '13px' }}>
      <Grid
        defaultLayout={vscodeLayout}
        persist="localStorage"
        persistKey="vscode-clone"
        className="h-full bg-[#1e1e1e] text-white"
      >
        {/* Activity Bar */}
        <Block
          id="activity-bar"
          className="bg-[#333333] flex flex-col items-center py-2"
        >
          <div className="flex flex-col space-y-2">
            {activityItems.map(item => (
              <button
                key={item.id}
                className={`w-10 h-10 flex items-center justify-center text-lg rounded hover:bg-[#505050] transition-colors ${
                  activeView === item.id ? 'bg-[#505050] border-l-2 border-[#007acc]' : ''
                }`}
                onClick={() => setActiveView(item.id)}
                title={item.label}
              >
                {item.icon}
              </button>
            ))}
          </div>
        </Block>

        <Divider targetId="activity-bar" position="end" className="bg-[#2d2d30]" />

        {/* Sidebar */}
        <Block
          id="sidebar"
          className="bg-[#252526] border-r border-[#2d2d30]"
          desktop={{ collapsible: true }}
        >
          <div className="h-full flex flex-col">
            <div className="px-3 py-2 text-xs font-medium text-[#cccccc] uppercase tracking-wide border-b border-[#2d2d30]">
              {activeView === 'explorer' && 'Explorer'}
              {activeView === 'search' && 'Search'}
              {activeView === 'source-control' && 'Source Control'}
              {activeView === 'debug' && 'Run and Debug'}
              {activeView === 'extensions' && 'Extensions'}
            </div>

            <div className="flex-1 p-2">
              {activeView === 'explorer' && (
                <div>
                  <div className="mb-2">
                    <div className="text-xs text-[#cccccc] mb-1 font-medium">WORKSPACE</div>
                    <div className="ml-2 space-y-1">
                      <div className="flex items-center space-x-1 text-[#cccccc] hover:bg-[#2a2d2e] px-1 py-0.5 rounded cursor-pointer">
                        <span>üìÅ</span>
                        <span>src</span>
                      </div>
                      <div className="ml-4 space-y-1">
                        <div className="flex items-center space-x-1 text-[#cccccc] hover:bg-[#2a2d2e] px-1 py-0.5 rounded cursor-pointer">
                          <span>üìÑ</span>
                          <span>index.ts</span>
                        </div>
                        <div className="flex items-center space-x-1 text-[#cccccc] hover:bg-[#2a2d2e] px-1 py-0.5 rounded cursor-pointer">
                          <span>‚öõÔ∏è</span>
                          <span>App.tsx</span>
                        </div>
                      </div>
                      <div className="flex items-center space-x-1 text-[#cccccc] hover:bg-[#2a2d2e] px-1 py-0.5 rounded cursor-pointer">
                        <span>üìÑ</span>
                        <span>package.json</span>
                      </div>
                    </div>
                  </div>
                </div>
              )}
              {activeView === 'search' && (
                <div>
                  <input
                    type="text"
                    placeholder="Search"
                    className="w-full bg-[#3c3c3c] text-[#cccccc] px-2 py-1 text-sm rounded border-none outline-none"
                  />
                  <input
                    type="text"
                    placeholder="Replace"
                    className="w-full bg-[#3c3c3c] text-[#cccccc] px-2 py-1 text-sm rounded border-none outline-none mt-2"
                  />
                </div>
              )}
            </div>
          </div>
        </Block>

        <Divider targetId="sidebar" position="end" className="bg-[#2d2d30]" />

        {/* Editor Area */}
        <Block
          id="editor"
          className="bg-[#1e1e1e] flex flex-col"
        >
          {/* Tab bar */}
          <div className="bg-[#2d2d30] border-b border-[#2d2d30] flex">
            <div className="bg-[#1e1e1e] px-3 py-2 border-r border-[#2d2d30] flex items-center space-x-2">
              <span>‚öõÔ∏è</span>
              <span className="text-[#cccccc]">App.tsx</span>
              <button className="text-[#969696] hover:text-[#cccccc] text-xs">‚úï</button>
            </div>
            <div className="px-3 py-2 border-r border-[#2d2d30] flex items-center space-x-2 text-[#969696] hover:text-[#cccccc] cursor-pointer">
              <span>üìÑ</span>
              <span>index.ts</span>
              <button className="text-[#969696] hover:text-[#cccccc] text-xs">‚úï</button>
            </div>
          </div>

          {/* Editor content */}
          <div className="flex-1 relative">
            <div className="absolute inset-0 font-mono text-sm leading-relaxed">
              {/* Line numbers */}
              <div className="absolute left-0 top-0 w-12 h-full bg-[#1e1e1e] border-r border-[#2d2d30] text-[#858585] text-right pr-2 pt-4 text-xs">
                <div>1</div>
                <div>2</div>
                <div>3</div>
                <div>4</div>
                <div>5</div>
                <div>6</div>
                <div>7</div>
                <div>8</div>
                <div>9</div>
                <div>10</div>
              </div>

              {/* Code content */}
              <div className="ml-12 pt-4 pl-4 text-[#cccccc]">
                <div><span className="text-[#569cd6]">import</span> <span className="text-[#4ec9b0]">React</span> <span className="text-[#569cd6]">from</span> <span className="text-[#ce9178]">'react'</span></div>
                <div><span className="text-[#569cd6]">import</span> <span className="text-[#4ec9b0]">{'{'} Grid, Block, Divider {'}'}</span> <span className="text-[#569cd6]">from</span> <span className="text-[#ce9178]">'@pretty-poly/react'</span></div>
                <div></div>
                <div><span className="text-[#569cd6]">function</span> <span className="text-[#dcdcaa]">App</span><span className="text-[#cccccc]">() {'{'}</span></div>
                <div className="ml-4"><span className="text-[#569cd6]">return</span> <span className="text-[#cccccc]">{'('}</span></div>
                <div className="ml-8"><span className="text-[#569cd6]">{'<'}</span><span className="text-[#4ec9b0]">Grid</span> <span className="text-[#9cdcfe]">className</span><span className="text-[#cccccc]">=</span><span className="text-[#ce9178]">"h-screen"</span><span className="text-[#569cd6]">{'>'}</span></div>
                <div className="ml-12"><span className="text-[#569cd6]">{'<'}</span><span className="text-[#4ec9b0]">Block</span> <span className="text-[#9cdcfe]">id</span><span className="text-[#cccccc]">=</span><span className="text-[#ce9178]">"main"</span><span className="text-[#569cd6]">{'>'}</span></div>
                <div className="ml-16"><span className="text-[#ce9178]">Hello PrettyPoly!</span></div>
                <div className="ml-12"><span className="text-[#569cd6]">{'</'}</span><span className="text-[#4ec9b0]">Block</span><span className="text-[#569cd6]">{'>'}</span></div>
                <div className="ml-8"><span className="text-[#569cd6]">{'</'}</span><span className="text-[#4ec9b0]">Grid</span><span className="text-[#569cd6]">{'>'}</span></div>
              </div>
            </div>
          </div>
        </Block>

        <Divider targetId="editor" position="end" className="bg-[#2d2d30]" />

        {/* Panel */}
        <Block
          id="panel"
          className="bg-[#1e1e1e] border-t border-[#2d2d30]"
          desktop={{ collapsible: true }}
        >
          <div className="h-full flex flex-col">
            {/* Panel tabs */}
            <div className="bg-[#252526] border-b border-[#2d2d30] flex">
              {panelTabs.map(tab => (
                <button
                  key={tab.id}
                  className={`px-3 py-1 text-xs hover:bg-[#2a2d2e] transition-colors ${
                    activePanelTab === tab.id
                      ? 'text-[#cccccc] border-b-2 border-[#007acc]'
                      : 'text-[#969696]'
                  }`}
                  onClick={() => setActivePanelTab(tab.id)}
                >
                  {tab.label}
                </button>
              ))}
            </div>

            {/* Panel content */}
            <div className="flex-1 font-mono text-xs leading-relaxed p-2 text-[#cccccc]">
              {activePanelTab === 'terminal' && (
                <div>
                  <div className="text-[#569cd6]">$</div>
                  <div className="text-[#cccccc]">$ npm run dev</div>
                  <div className="text-[#4ec9b0]">  VITE v4.4.5  ready in 674 ms</div>
                  <div className="text-[#cccccc]">  ‚ûú  Local:   http://localhost:5173/</div>
                  <div className="text-[#cccccc]">  ‚ûú  Network: use --host to expose</div>
                  <div className="text-[#569cd6]">$ <span className="animate-pulse">|</span></div>
                </div>
              )}
              {activePanelTab === 'problems' && (
                <div className="text-[#f14c4c]">
                  <div>No problems found</div>
                </div>
              )}
              {activePanelTab === 'output' && (
                <div>
                  <div>[2024-01-15 10:30:45] Building...</div>
                  <div>[2024-01-15 10:30:46] Build completed successfully</div>
                </div>
              )}
            </div>
          </div>
        </Block>

        {/* Status Bar */}
        <Block
          id="status-bar"
          className="bg-[#007acc] text-white px-2 flex items-center justify-between text-xs"
        >
          <div className="flex items-center space-x-4">
            <span>üåø main</span>
            <span>‚ùå 0</span>
            <span>‚ö†Ô∏è 0</span>
          </div>
          <div className="flex items-center space-x-4">
            <span>TypeScript React</span>
            <span>UTF-8</span>
            <span>LF</span>
            <span>Ln 1, Col 1</span>
          </div>
        </Block>
      </Grid>
    </div>
  )
}

export default VSCodeCloneExample